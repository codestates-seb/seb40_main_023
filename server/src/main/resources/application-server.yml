spring:
  datasource: #상현님 서버
    url : jdbc:mysql://localhost:3306/LuckMango
    username: root  # mysql 이름 설정
    password: 4682  # mysql 비밀번호 설정
    driver-class-name: com.mysql.cj.jdbc.Driver
  devtools:
    livereload:
      enabled: true
  servlet:  #업로드 제한
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  # 정현님 서버
  #    url: jdbc:mysql:ec2-43-201-150-208.ap-northeast-2.compute.amazonaws.com:3306/LuckMango   # 주소 / db이름  # 추후에 EC2 환경변수에 설정 필요
  #    username: root            # mysql 이름 설정   # 추후에 EC2 환경변수에 설정 필요
  #    password: a!123456789    # mysql 비밀번호 설정 # 추후에 EC2 환경변수에 설정 필요

  #create: 기존테이블 삭제 후 다시 생성 (DROP + CREATE)
  #create-drop: create와 같으나 종료시점에 테이블 DROP
  #update: 변경분만 반영(운영DB에서는 사용하면 안됨)
  #validate: 엔티티와 테이블이 정상 매핑되었는지만 확인
  #none: 사용하지 않음(사실상 없는 값이지만 관례상 none이라고 한다.)

  jpa:
    database: mysql   # 추가 해준 부분
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create # (1) 스키마 자동 생성 //create-drop,update
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print

  logging:
    level:
      org:
        springframework:
          orm:
            jpa: DEBUG

  server:
    servlet:
      encoding:
        force-response: true
mail:
  address:
    admin: admin@gmail.com                # 추후에 EC2 환경변수에 설정 필요
jwt:
  secret-key: EFWHKQDDNMQU2YLOIBTW6IKUMVAHG5BB # 추후에 EC2 환경변수에 설정 필요
  access-token-expiration-minutes: 60     # 1시간

  refresh-token-expiration-minutes: 360   # 6시간

logging.config: classpath:logback/logback-server.xml

