# 서버 환경에서 사용하는 정보들은 application-server.yml 파일에 설정합니다.
# TODO MySQL DB 접속 정보를 아래에 설정하세요
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/nyLuckMango
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
  devtools:
    livereload:
      enabled: true
  thymeleaf:    # thymeleaf 참조 경로
    prefix: classpath:/templates/
    sufix: .html
    cache: false  # thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
    check-template-location: true # templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.

  #create: 기존테이블 삭제 후 다시 생성 (DROP + CREATE)
  #create-drop: create와 같으나 종료시점에 테이블 DROP
  #update: 변경분만 반영(운영DB에서는 사용하면 안됨)
  #validate: 엔티티와 테이블이 정상 매핑되었는지만 확인
  #none: 사용하지 않음(사실상 없는 값이지만 관례상 none이라고 한다.)

  jpa:
    database: mysql   # 추가 해준 부분
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create # (1) 스키마 자동 생성 //create-drop,update
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print

  logging:
    level:
      org:
        springframework:
          orm:
            jpa: DEBUG

  server:
    servlet:
      encoding:
        force-response: true
  jwt:
    secret-key: $JWT_SECRET_KEY
    access-token-expiration-minutes: 40
    refresh-token-expiration-minutes: 420